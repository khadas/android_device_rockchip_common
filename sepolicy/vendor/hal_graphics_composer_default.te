vndbinder_use(hal_graphics_composer_default)
allow hal_graphics_composer_default vndbinder_device:chr_file { read write open ioctl };
allow hal_graphics_composer_default rga_device:chr_file { read write open ioctl };
allow hal_graphics_composer_default self:netlink_kobject_uevent_socket create_socket_perms_no_ioctl;;
allow hal_graphics_composer_default hal_graphics_mapper_hwservice:hwservice_manager find;

allow hal_graphics_composer_default sysfs_hdmi:file rw_file_perms;
allow hal_graphics_composer_default block_device:dir { search };
allow hal_graphics_composer_default gpu_device:dir { search };
allow hal_graphics_composer_default vndbinder_device:chr_file { read write open ioctl };
allow hal_graphics_composer_default sysfs_devices_system_cpu:file rw_file_perms;
allow hal_graphics_composer_default property_socket:sock_file { write };
allow hal_graphics_composer_default init:unix_stream_socket { connectto };
# HWC_UeventThread
allow hal_graphics_composer_default self:netlink_kobject_uevent_socket create_socket_perms_no_ioctl;

allow hal_graphics_composer_default baseparameter_block_device:blk_file rw_file_perms;
dontaudit hal_graphics_composer_default baseparameter_block_device:chr_file rw_file_perms;
allow hal_graphics_composer_default hal_graphics_allocator_hwservice:hwservice_manager { find };
dontaudit hal_graphics_composer_default kernel:system module_request;
binder_call(hal_graphics_composer_default, hal_graphics_allocator_default)

allow hal_graphics_composer_default mediaserver:fd {use};
allow hal_graphics_composer_default hal_camera_default:fd {use};

get_prop(hal_graphics_composer_default, public_vendor_system_prop)
get_prop(hal_graphics_composer_default, graphic_prop)
get_prop(hal_graphics_composer_default, vendor_omx_prop)
set_prop(hal_graphics_composer_default, public_vendor_system_prop)

#allow hal_graphics_composer_default  gpu_data_file:file rw_file_perms;
